//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "main.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TFormMain *FormMain;
TMemoryStream *MS = new TMemoryStream ; // создаем поток
void Write(AnsiString Text);  // ф-я записи инфы в поток
int Size ; // размер пореданного файла
bool Receive ; // передаем ли мы на данный момент файл
AnsiString FileName ;  // имя файла
//---------------------------------------------------------------------------
__fastcall TFormMain::TFormMain(TComponent* Owner)
        : TForm(Owner)
{       
}
//---------------------------------------------------------------------------
void Write(AnsiString Text)
{

if(MS->Size < Size)  // если мы еще принимаем файл и размер потока меньше размера файла
{
MS->Write(Text.c_str(),Text.Length()); // записываем в поток
FormMain->MemoConsole->Lines->Add("Принимаем данные..."); //
}
if(MS->Size == Size) // если файл принят и размер потока соответствует размеру файла
{
Receive = false ; // останавливаем режим передачи
MS->Position = 0 ;   // переводим каретку потока в начало
FormMain->ClientSocket->Socket->SendText("end"); // отсылаем серверу что мы приняли файл
CreateDir("Files"); // создаем папку для сохраненных файлов
MS->SaveToFile("Files\\"+FileName); // сохраняем туда наш файл
MS->Clear() ; // освобождаем поток
Size = 0 ;
FormMain->MemoConsole->Lines->Add("Файл принят !");

}
}
//---------------------------------------------------------------------------
void __fastcall TFormMain::ButtonConnectClick(TObject *Sender) //Кнопка подключения к серверу
{
         if (EditPort->Text =="" || EditHost->Text =="" ||EditName->Text =="") ShowMessage("Заполни все поля!" );  //проверка на заполнение
            else{
        EditPort->Enabled = false; //Отключаем поле ввода порта
        EditHost->Enabled = false; //Отключаем поле ввода хоста
        EditName->Enabled = false; //Отключаем поле ввода ника
        ButtonConnect->Enabled = false; //Отключаем кнопку подключения
        ClientSocket->Port = EditPort->Text.ToInt(); //Задаем клиенту порт для подключения
        ClientSocket->Host = EditHost->Text; //Задаем клиенту хост для подключения
        ClientSocket->Active = true; //Включаем клиента
        MemoConsole->Lines->Add("Подключаемся...");
                }
}
//---------------------------------------------------------------------------
void __fastcall TFormMain::ButtonSendClick(TObject *Sender) //Кнопка отсылки сообщения
{
        ClientSocket->Socket->SendText(EditName->Text + ": " + EditMessage->Text); //Отсылаем на сервер ник и сообщение
        EditMessage->Text = "";
}
//---------------------------------------------------------------------------

void __fastcall TFormMain::ClientSocketRead(TObject *Sender,
      TCustomWinSocket *Socket) //Обработчик чтения сообщений
{
        if(RadioGroup1->ItemIndex == 0){
        MemoMessages->Lines->Add(Socket->ReceiveText());
        } //Выводим на принятое сообщение


        if(RadioGroup1->ItemIndex == 1){
AnsiString Rtext ;  // текст, который посылает сервер
Rtext = ClientSocket->Socket->ReceiveText() ;
if(Receive == true) // если мы в режиме передачи файла, то
{
Write(Rtext); // записываем его в поток
}
else // если нет , то
{
MemoConsole->Lines->Add("Приняли текст :" + Rtext);
if(Rtext.SubString(0,Rtext.Pos("#")-1) == "file") // Если это файл, то...
{
Rtext.Delete(1,Rtext.Pos("#")) ;    // удаляем слово file
Name = Rtext.SubString(0,Rtext.Pos("#")-1); // Определяем имя файла
FileName = Name.SubString(Name.LastDelimiter("\\")+1,Name.Length()); ; // Выделяем чистое имя файла , например с c:\\test.txt , берем test.txt
Rtext.Delete(1,Rtext.Pos("#")) ;  // Удаляем последний разделитель
Size = StrToInt(Rtext.SubString(0,Rtext.Pos("#")-1)) ; // Определяем размер файла
Rtext.Delete(1, Rtext.Pos("#")); // Удаляем последний разделитель
MemoConsole->Lines->Add("Размер файла: "+IntToStr(Size)+" байт"); // Выводим размер файла
MemoConsole->Lines->Add("Имя файла: "+Name); // Выводим имя файла
Receive = true; // Переводим сервер в режим приёма файла
if(Receive == true)
{
MemoConsole->Lines->Add("Режим приема буфера");
}
}
}
}
}
//---------------------------------------------------------------------------

void __fastcall TFormMain::FormClose(TObject *Sender, TCloseAction &Action) //Обработчик закрытия формы
{
        ClientSocket->Active = false; //При закрытии формы отключаем клиента        
}
//---------------------------------------------------------------------------

void __fastcall TFormMain::ClientSocketError(TObject *Sender,
      TCustomWinSocket *Socket, TErrorEvent ErrorEvent, int &ErrorCode)
{
if (ErrorCode == 10061)
{
 ErrorCode = 0; // это что бы сообщение не было у пользователя
 ShowMessage("Произошла ошибка. Проверьте, введен ли тот порт!");
  EditPort->Enabled = true; //Отключаем поле ввода порта
  EditHost->Enabled = true; //Отключаем поле ввода хоста
  EditName->Enabled = true; //Отключаем поле ввода ника
  ButtonConnect->Enabled = true; //Отключаем кнопку подключения
}
}
//---------------------------------------------------------------------------



void __fastcall TFormMain::ButtonClearClick(TObject *Sender)
{
        MemoMessages->Lines->Clear();
}
//---------------------------------------------------------------------------



void __fastcall TFormMain::Image1Click(TObject *Sender)
{
        MemoMessages->SelAttributes->Color = ColorBox1->Selected;
        MemoMessages->SelAttributes->Size = StrToInt(ComboBox1 -> Text);
}
//---------------------------------------------------------------------------



void __fastcall TFormMain::Image3Click(TObject *Sender)
{
        MemoMessages->Paragraph->Alignment = taLeftJustify;
}
//---------------------------------------------------------------------------

void __fastcall TFormMain::Image4Click(TObject *Sender)
{
        MemoMessages->Paragraph->Alignment = taCenter;
}
//---------------------------------------------------------------------------

void __fastcall TFormMain::Image5Click(TObject *Sender)
{
        MemoMessages->Paragraph->Alignment = taRightJustify;
}
//---------------------------------------------------------------------------


void __fastcall TFormMain::ClientSocketConnecting(TObject *Sender,
      TCustomWinSocket *Socket)
{
        MemoMessages->Lines->Add("Вы подключились!");
}
//---------------------------------------------------------------------------

void __fastcall TFormMain::RadioGroup1Click(TObject *Sender)
{
        if(RadioGroup1->ItemIndex == 1){ //если выбран файл

              ButtonSend->Visible = false;
           }else{                            //если сообщения
                ButtonSend->Visible = true;
           
           }
}
//---------------------------------------------------------------------------

void __fastcall TFormMain::ClientSocketConnect(TObject *Sender,
      TCustomWinSocket *Socket)
{
       FormMain->ClientSocket->Socket->SendText("Леха");
}
//---------------------------------------------------------------------------

